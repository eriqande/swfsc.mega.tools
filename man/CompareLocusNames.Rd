% Generated by roxygen2 (4.0.0): do not edit by hand
\name{CompareLocusNames}
\alias{CompareLocusNames}
\title{find closely matching locus names between two files}
\usage{
CompareLocusNames(First, Second, maxD = 7)
}
\arguments{
  \item{First}{Either a vector of locus names, or a data
  frame in which the loci start in column 1 and the column
  for the second allele at a locus named "LocusX" is
  "LocusX.1".  Thus, it is the sort of data frame that
  would result from reading in a two-column (ToolKit)
  format file while setting the first column to be the row
  names, and using R's default method for making column
  names unique}

  \item{Second}{a vector of locus names or a data frame
  formatted like \code{First}.}

  \item{maxD}{The maximum string distance between two locus
  names that are still considered an approximate match}
}
\value{
A list with three components:
 \itemize{
 \item{\code{InFirstButNotSecond}: }{Loci appearing in First but with no \emph{exact} matches in Second}
 \item{\code{RemainingInSecondButNotInFirst}: }{Any loci in second that had neither approximate nor exact matches
    to any loci in First.}
	\item{\code{InBoth}: }{Loci that have an exact matching name in both First and Second.}
}
Each component of the returned list has a matrix with 5 columns with headers as follows:
\itemize{
\item{\code{NameInFirst}: }{ Locus name as it appears in First  }
\item{\code{NameInSecond}: }{ Locus name as it appears in Second }
\item{\code{StringSimilarity}: }{ The distance between the two approximately matching names.  Lower means more similar. }
\item{\code{ColumnsInFirst}: }{ If First is a data.frame, these correspond to the columns in an excel file that hold the original data table. }
\item{\code{ColumnsInSecond}: }{ See above, but for second. }
}
}
\description{
find closely matching locus names between two files
}
\examples{
# look for closely matching locus names between the two steelhead example data sets
 CompareLocusNames(sthd.geno.A, sthd.geno.B)

 # look for the standard Omykiss locus names in sthd.geno.B
 CompareLocusNames(sthd.geno.B, Omykiss.Standard.Loci)
}

